@model _3MA.Models.RegisterViewModelForm
@{
    ViewBag.Title = "Register";
    var type = ViewData["Type"] as string;
    var list = ViewData["ProjectList"] as List<string>;
    var selected = ViewData["Selected"] as string;
    if (selected == null) { selected = ""; }
    string isHidden = "";
}

<script src="~/Scripts/core.js"></script>

<h2>@ViewBag.Title.</h2>

@if (type == "project")
{
    isHidden = "hidden";

    if(list != null && list.Count > 0)
    {
    <select name="project_list" id="project_list" style="width: 300px; height: 25px;" onchange="projectSelect()">
        <option>-</option>
        @foreach (var l in list)
        {
            @*if (l.Contains(selected))
            {
                <option selected="selected" projectSelect() >@l</option>
            }
            else
            {
                <option>@l</option>
            }*@
            <option>@l</option>
        }
    </select>
    }
    else
    {
        <br/>
        <p>There are currently no on-going projects to sign up for, please register as a single dwelling buyer.</p>
        <br />
    }
}

<div id="clientForm" @isHidden >
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @autofocus = "autofocus" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.GivenName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.GivenName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.HPhone, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.HPhone, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.MPhone, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MPhone, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoveIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoveIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoveIn, "", new { @class = "text-danger" })
            </div>
        </div>

        if (type == "project")
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Suite, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Suite, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Plan, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Plan, new { @class = "form-control" })
                </div>
            </div>

            <input type="text" id="ProjectName" name="ProjectName" hidden/>
            @*<input type="text" id="ProjectId" name="ProjectName"  />*@
        }
        else
        {
            <div class="container-box">
                <h4>New address</h4>

                <div class="form-group">
                    @Html.LabelFor(m => m.Street, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Street, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Prov, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Prov, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Country, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Postal, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Postal, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        }

        //TODO: fix the formatting of new/billing addresses
        <div class="container-box">

            <h4>Billing address</h4>

            <div class="form-group">
                @Html.LabelFor(m => m.BillStreet, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.BillStreet, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.BillCity, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.BillCity, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.BillProv, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.BillProv, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.BillCountry, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.BillCountry, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.BillPostal, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.BillPostal, new { @class = "form-control" })
                </div>
            </div>
        </div>

    <!-- Terms and conditions-->

        <input type="checkbox" name="cbTerms" id="idTerms" onclick="agreeTerms()" /><p>I agree to the terms and conditions and so on</p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnSubmit" type="submit" class="btn btn-default" value="Register" disabled />
            </div>
        </div>
    }
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
